
package com.thecodinginterface.scraperfx;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

import javafx.animation.PauseTransition;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Accordion;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.TitledPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.TextAlignment;
import javafx.util.Duration;
import javafx.fxml.Initializable;

public class Controller implements Initializable {
  
    @FXML
    private TextArea docTextArea;

    @FXML
    private VBox queryContentVBox;

    @FXML
    private TextField queryTextField;

    @FXML
    private TextField urlTextField;

    @FXML
    private Button fetchBtn;

    private Document doc;
    private PauseTransition debounce;

    @FXML
    void handleFetchUrl(ActionEvent event) {
        try {
            doc = Jsoup.connect(urlTextField.getText()).get();
            docTextArea.setText(doc.body().html());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
  
    @Override
    public void initialize(URL location, ResourceBundle resources) {
        fetchBtn.disableProperty().bind(urlTextField.textProperty().isEmpty());
        debounce = new PauseTransition(Duration.seconds(1));
        queryTextField.textProperty().addListener((obs, ov, nv) -> {
            debounce.setOnFinished(evt -> {
                var query = queryTextField.getText();
                if (query != null && !query.isBlank()) {
                    queryContentVBox.getChildren().clear();
                    Elements elements = doc.select(query);
                    if (!elements.isEmpty()) {
                        var accordion = new Accordion();
                        elements.forEach(el -> {
                            var html = el.html();
                            // var elContentsLbl = new Label(html);
                            // elContentsLbl.setWrapText(true);
                            // elContentsLbl.setTextAlignment(TextAlignment.LEFT);
                            // var elContentsVBox = new VBox(elContentsLbl);
                            double ht = html.length() * 150 / queryContentVBox.getWidth();

                            var textArea = new TextArea(html);
                            textArea.setWrapText(true);
                            textArea.setEditable(false);
                            textArea.setMinHeight(ht > 50 ? ht : 50);
                            textArea.minWidthProperty().bind(queryContentVBox.widthProperty());
                            accordion.getPanes().add(
                                new TitledPane(el.tagName(), new StackPane(textArea))
                            );
                        });
                        queryContentVBox.getChildren().add(accordion);
                    }
                } else {
                    queryContentVBox.getChildren().clear();
                }
            });
            debounce.playFromStart();
        });
    }
    
}
